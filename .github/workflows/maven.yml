name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Get latest tag
      id: get_latest_tag
      run: echo ::set-output name=tag::$(git describe --tags `git rev-list --tags --max-count=1`)

    - name: Increment version
      id: increment_version
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.tag }}
        echo "Latest tag: $latest_tag"
        if [[ "$latest_tag" == v* ]]; then
          version=${latest_tag:1}
        else
          version=$latest_tag
        fi
        IFS='.' read -r -a version_parts <<< "$version"
        version_major=${version_parts[0]}
        version_minor=${version_parts[1]}
        version_patch=${version_parts[2]}
        version_patch=$((version_patch+1))
        new_version="v$version_major.$version_minor.$version_patch"
        echo "New version: $new_version"
        echo ::set-output name=new_version::$new_version

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.increment_version.outputs.new_version }}
        release_name: Release ${{ steps.increment_version.outputs.new_version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/betterlog-1.0-SNAPSHOT.jar
        asset_name: plugin.jar
        asset_content_type: application/java-archive
