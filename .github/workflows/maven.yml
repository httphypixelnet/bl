name: Java CI with Maven
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Ensures full git history is fetched for tag operations

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Debug Maven Project Information
      run: |
        echo "Listing project directory:"
        ls -R
        echo "\nMaven project information:"
        mvn help:effective-pom
        echo "\nLocating JAR files:"
        find . -name "*.jar"

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    - name: Get latest tag
      id: get_latest_tag
      run: |
        # Try to get the latest tag, fallback to 0.0.0 if no tags exist
        latest_tag=$(git describe --tags `git rev-list --tags --max-count=1` 2>/dev/null || echo "v0.0.0")
        echo "Latest tag found: $latest_tag"
        echo "tag=$latest_tag" >> $GITHUB_OUTPUT

    - name: Increment version
      id: increment_version
      run: |
        latest_tag=${{ steps.get_latest_tag.outputs.tag }}
        echo "Processing tag: $latest_tag"
        
        # Remove 'v' prefix if present
        version=$(echo "$latest_tag" | sed -e 's/^v//')
        
        # Split version into parts
        IFS='.' read -r -a version_parts <<< "$version"
        
        # Ensure we have at least 3 parts
        [[ ${#version_parts[@]} -lt 3 ]] && version_parts+=(0 0)
        
        version_major=${version_parts[0]:-0}
        version_minor=${version_parts[1]:-0}
        version_patch=${version_parts[2]:-0}
        
        # Increment patch version
        version_patch=$((version_patch+1))
        
        new_version="v$version_major.$version_minor.$version_patch"
        
        echo "Incremented version: $new_version"
        echo "new_version=$new_version" >> $GITHUB_OUTPUT

    - name: Locate JAR file
      id: locate_jar
      run: |
        # Find the JAR file and its full path
        jar_path=$(find . -name "*.jar" | grep -E "target/.*\.jar$" | head -n 1)
        echo "JAR file found at: $jar_path"
        echo "jar_path=$jar_path" >> $GITHUB_OUTPUT

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.increment_version.outputs.new_version }}
        release_name: Release ${{ steps.increment_version.outputs.new_version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ steps.locate_jar.outputs.jar_path }}
        asset_name: plugin.jar
        asset_content_type: application/java-archive
